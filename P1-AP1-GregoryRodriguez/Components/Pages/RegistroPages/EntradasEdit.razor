@page "/EntradasGuacales/Edit/{EntradaId:int}"
@using P1_AP1_GregoryRodriguez.Services
@using P1_AP1_GregoryRodriguez.Models
@inject EntradasGuacalesService entradasGuacalesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>

<EditForm Model="Entrada" OnValidSubmit="Modificar">
	<DataAnnotationsValidator/>
	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header text-center">
				<h5 class="card-title">Crear Entrada</h5>
			</div>

			<div class="card-body">
				<div class="mt-3">
					<label class="form-label">Fecha</label>
					<InputDate class="form-control" @bind-Value="Entrada.Fecha"></InputDate>
				</div>

				<div class="mt-3">
					<label class="form-label">EntradaId</label>
					<InputNumber class="form-control" @bind-Value="Entrada.IdEntrada" readonly></InputNumber>
				</div>

				<div class="mt-3">
					<label class="form-label">Nombre Cliente</label>
					<InputText class="form-control" @bind-Value="Entrada.NombreCliente"></InputText>
					<ValidationMessage class="alert text-danger" For="@(() => Entrada.NombreCliente)"></ValidationMessage>
				</div>

				<div class="mt-3">
					<label class="form-label">Cantidad</label>
					<InputNumber class="form-control" @bind-Value="Entrada.Cantidad"></InputNumber>
					<ValidationMessage class="alert text-danger" For="@(() => Entrada.Cantidad)"></ValidationMessage>
				</div>

				<div class="mt-3">
					<label class="form-label">Precio</label>
					<InputNumber class="form-control" @bind-Value="Entrada.Precio"></InputNumber>
					<ValidationMessage class="alert text-danger" For="@(() => Entrada.Precio)"></ValidationMessage>
				</div>

				<div class="mt-3">
					<label class="form-label">Importe</label>
					<input class="form-control" value=@(Entrada.Cantidad* Entrada.Precio) readonly />
				</div>
			</div>

			<div class="card-footer text-center">
				<a href="/Guacales/Index" class="btn btn-secondary bi bi-arrow-left">Volver</a>
				<button type="submit" class="btn btn-primary bi bi-floppy" @onclik="Crear">Modificar</button>
			</div>
		</div>

	</div>
</EditForm>

@if (!string.IsNullOrEmpty(Mensaje))
{
	<label class="alert alert-danger">Mensaje</label>
}

@code {
	[Parameter]
	public int EntradaId { get; set; }

	public EntradasGuacales Entrada { get; set; }
	public string Mensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Entrada = await entradasGuacalesService.Buscar(EntradaId);
	}

	public async Task Modificar()
	{
		var guardado = await entradasGuacalesService.Guardar(Entrada);

		if (guardado)
		{
			navigationManager.NavigateTo("/Guacales/Index");
		}
		else
		{
			Mensaje = "No se pudo Modificar correctamente";
		}
	}

}
